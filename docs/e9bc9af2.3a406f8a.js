(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{197:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"metadata",(function(){return b})),a.d(t,"default",(function(){return o}));var n=a(2),r=(a(0),a(210));const c={id:"chunks",title:"Chunks",sidebar_label:"Chunks"},l=[{value:"Chunk Structure",id:"chunk-structure",children:[]},{value:"Chunk SubTypes",id:"chunk-subtypes",children:[]}],b={id:"contract-builder-api/chunks",title:"Chunks",description:"A chunk is a collection of game logic game objects which are related. A named chunk, e.g. `PlayerLance`, often has special logic associated with it whilst using chunks purely as a logical collection of 'like' logics can also be used, e.g. `Container`.",source:"@site/docs\\contract-builder-api\\chunks.md",permalink:"/docs/contract-builder-api/chunks",sidebar_label:"Chunks",sidebar:"docs",previous:{title:"Understanding Structure",permalink:"/docs/contract-builder/structure"},next:{title:"Nodes",permalink:"/docs/contract-builder-api/nodes"}},i={rightToc:l,metadata:b};function o({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},i,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A chunk is a collection of game logic game objects which are related. A named chunk, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"PlayerLance"),", often has special logic associated with it whilst using chunks purely as a logical collection of 'like' logics can also be used, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"Container"),"."),Object(r.b)("p",null,"Under a chunk you create ",Object(r.b)("inlineCode",{parentName:"p"},"Node")," children. A node is a specific logic piece like the ability to place a ",Object(r.b)("inlineCode",{parentName:"p"},"Spawner")," or create an ",Object(r.b)("inlineCode",{parentName:"p"},"Objective"),"."),Object(r.b)("h3",{id:"chunk-structure"},"Chunk Structure"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "Name": "Chunk_Optional_Initial_Enemy",\n  "Type": "Chunk",\n  "SubType": "Lance",\n  "StartingStatus": "Inactive", // Optional\n  "ConflictsWith": ["9c65494e-4e1a-1234-9b47-666ab8fc1111"], // Optional\n  "OnActiveExecute": [\n    // Optional\n    {\n      "Type": "Dialogue",\n      "EncounterGuid": "e0ca3227-ffbf-4088-a261-3d4e9ab7d4c5"\n    },\n    {\n      "Type": "SetChunkStateAtRandom",\n      "ChunkGuids": ["c27a41c7-ae4d-4a97-90be-3e710fe31e22"]\n    }\n  ],\n  "ControlledByContract": true, // Optional\n  "Guid": "3b47894e-2d25-4599-9b47-620ab8fcfa62", // Optional\n  "Children": [\n    // Children nodes\n  ]\n}\n')),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Property"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of the chunk that will be used for the Unity game object")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type of node")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SubType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Subtype of chunk")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"StartingStatus"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Active")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Determines the starting status. ",Object(r.b)("inlineCode",{parentName:"td"},"Active"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Inactive"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Finished"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ConflictsWith"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"[]")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets which chunks would conflict with this one. Important for ensuring no loose ending conditions. ",Object(r.b)("br",null),Object(r.b)("br",null)," This marks any objective in the conflicting chunk as non-primary to allow complex contracts not to be blocked with locked contract objectives")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"OnActiveExecute"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"[]")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sets which logic to execute when this chunk is changed from ",Object(r.b)("inlineCode",{parentName:"td"},"Inactive")," to ",Object(r.b)("inlineCode",{parentName:"td"},"Active"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ControlledByContract"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Exposes the chunk to be enabled/disabled in the contract .json under 'chunkList'")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Guid"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Can be used to manually specify a Guid for use by other chunks, triggers, results or conditions")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Children"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"[]")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"An array of ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"nodes"}),"Nodes")," that specify logic to execute")))),Object(r.b)("h3",{id:"chunk-subtypes"},"Chunk SubTypes"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Container"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"General use chunk to group related logic together. Can be used for almost anything")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PlayerLance"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise player lance spawning")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"DestroyWholeLance"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise a 'Destroy Lance' setup")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EncounterBoundary"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise the encounter boundary setup")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Dialogue"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise dialogue")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Placement"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise placement related logic")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Lance"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to organise spawning of a lance")))))}o.isMDXComponent=!0},210:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n),c=r.a.createContext({}),l=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},b=function(e){var t=l(e.components);return r.a.createElement(c.Provider,{value:t},e.children)};var i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},o=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,b=e.parentName,o=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),u=l(a),d=n,p=u[b+"."+d]||u[d]||i[d]||c;return a?r.a.createElement(p,Object.assign({},{ref:t},o,{components:a})):r.a.createElement(p,Object.assign({},{ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=o;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var u=2;u<c;u++)l[u]=a[u];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}o.displayName="MDXCreateElement"}}]);