(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{203:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"metadata",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),b=(a(0),a(213)),l={id:"spawner",title:"Spawner",sidebar_label:"Spawner"},c=[{value:"SimpleSpawner",id:"simplespawner",children:[]}],p={id:"contract-builder-api/nodes/spawner",title:"Spawner",description:"The `Spawner` node allows for creation of lance spawns in the map. There are plans to extend this to building and general object spawns but that's future functionality.",source:"@site/docs\\contract-builder-api\\nodes\\spawner.md",permalink:"/docs/contract-builder-api/nodes/spawner",sidebar_label:"Spawner",sidebar:"docs",previous:{title:"Region",permalink:"/docs/contract-builder-api/nodes/region"},next:{title:"Swap Placement",permalink:"/docs/contract-builder-api/nodes/swap-placement"}},i={rightToc:c,metadata:p};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"Spawner")," node allows for creation of lance spawns in the map. There are plans to extend this to building and general object spawns but that's future functionality."),Object(b.b)("h2",{id:"simplespawner"},"SimpleSpawner"),Object(b.b)("p",null,"This node swaps the contract override's employer and target team."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Property"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of the Node that will be used for the Unity game object")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Spawner")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type of node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SubType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"SimpleSpawner")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Subtype of node (probably to be renamed to ",Object(b.b)("inlineCode",{parentName:"td"},"SimpleLanceSpawner")," soon)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Position"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"First team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Rotation"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Team"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Guid"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SpawnPoints"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SpawnPointGuids"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SpawnType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AI"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AlertLanceOnSpawn"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Second team to swap")))),Object(b.b)("h4",{id:"example"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "Name": "Lance_Enemy_OpposingForce",\n  "Type": "Spawner",\n  "SubType": "SimpleSpawner",\n  "Position": {\n    "Type": "World", // World, Local\n    "Value": { "x": 0, "y": 0, "z": 0 }\n  },\n  "Rotation": {\n    "Type": "World", // World, Local\n    "Value": { "x": 0, "y": 0, "z": 0 }\n  },\n  "Team": "Target",\n  "Guid": "f426f0dc-969d-477d-81a9-d02f9e1eff79", // Must match the spawner guids in the contract .json\n  "SpawnPoints": 4,\n  "SpawnPointGuids": [\n    "6cd3107e-0f9d-4809-ab8c-fb30faf4cd80",\n    "14c58a13-96a6-4f91-a1e5-47b5d02b81d1",\n    "92ea4a9a-0ea5-4445-b8ba-89a167e478de",\n    "0cf6442f-d67d-41e3-a658-c5e9f564cf9e"\n  ], // Must match the unit spawn guids in the contract .json\n  "SpawnType": "Leopard", // Leopard, DropPod, Instant\n  "AI": [\n    {\n      "Type": "StayInsideRegion",\n      "RegionGuid": "21a03616-c88b-4edd-a9a9-b4dd54b46d6c"\n    },\n    {\n      "Type": "MagicKnowledgeByTag",\n      "Action": "Add",\n      "Tags": ["Player 1"]\n    },\n    {\n      "Type": "PrioritiseTaggedUnit",\n      "Tags": ["defend_building_3b"],\n      "Priority": 1\n    }\n  ],\n  "AlertLanceOnSpawn": true\n}\n')))}d.isMDXComponent=!0},213:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n),b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},c=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)};var p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},i=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,i=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),d=l(a),o=n,u=d[c+"."+o]||d[o]||p[o]||b;return a?r.a.createElement(u,Object.assign({},{ref:t},i,{components:a})):r.a.createElement(u,Object.assign({},{ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=i;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var d=2;d<b;d++)l[d]=a[d];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}i.displayName="MDXCreateElement"}}]);