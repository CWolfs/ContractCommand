(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{149:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n(2),r=(n(0),n(188));const o={id:"setup",title:"Setup",sidebar_label:"Setup"},c=[{value:"Create a contract type enum entry",id:"create-a-contract-type-enum-entry",children:[]},{value:"Create an encounter layer",id:"create-an-encounter-layer",children:[]},{value:"Create a contract type build",id:"create-a-contract-type-build",children:[]},{value:"(Optional) Add an Encounter Ruleset for your contract type",id:"optional-add-an-encounter-ruleset-for-your-contract-type",children:[]}],i={id:"contract-builder/setup",title:"Setup",description:"To set up a custom contract type you need to do the following:",source:"@site/docs\\contract-builder\\setup.md",permalink:"/docs/contract-builder/setup",sidebar_label:"Setup",sidebar:"docs",previous:{title:"Overview",permalink:"/docs/contract-builder/overview"},next:{title:"Understanding Structure",permalink:"/docs/contract-builder/structure"}},l={rightToc:c,metadata:i};function s({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"To set up a custom contract type you need to do the following:"),Object(r.b)("h2",{id:"create-a-contract-type-enum-entry"},"Create a contract type enum entry"),Object(r.b)("p",null,"Either:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Edit and add a contract type entry to ",Object(r.b)("inlineCode",{parentName:"li"},"MissionControl/overrides/enums/ContractType.json")),Object(r.b)("li",{parentName:"ul"},"In your mod, merge a contract type as a ",Object(r.b)("inlineCode",{parentName:"li"},"DataAddendumEntries")," for ",Object(r.b)("inlineCode",{parentName:"li"},"ContractTypeEnumeration"))),Object(r.b)("p",null,"Add an entry like the following example, but changing what you require:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'  {\n    "ID" : 10000,  // ID must be unique and not clash with another contract type. Used in the below encounter layer.\n    "Name" : "SoloDuel", // Name must be unique and is used as an identifier in contract overrides JSON\n    "FriendlyName" : "Solo Duel", // Doesn\'t need to be unique. Allows contract type stacking. Name used in the game UI\n    "Version" : 0, // Has no real purpose except for a loose version control\n    "IsSinglePlayerProcedural" : true, // Is true, use for the typical contracts that pop up. false for story/restoration\n    "IsStory" : false, // Used for story missions\n    "IsRestoration" : false, // Used for restoration missions (which are the same as story really)\n    "CustomMusic" : null, // string value from `AudioState_Music_State` enum\n    "IsMultiplayer" : false, // Not important for custom contracts.\n    "UsesFury" : false, // Is meant to use fury instead of morale. Untested.\n    "UsesSecondScaledStructureValues" : false, // Unsure of this\n    "ContractRewardMultiplier" : 1, // Multipler for contract reward (of course!)\n    "Illustration" : "uixTxrSpot_battleContract", // Large image in the UI for the contract type\n    "Icon" : "uixSvgIcon_contract_Battle", // Icon used for the contract type\n    "IsPublished" : true // This must be true, otherwise the contract type won\'t be available to use\n  },\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"NOTE"),": Mission Control will continue to add contract types under the ",Object(r.b)("inlineCode",{parentName:"p"},"10000")," to ",Object(r.b)("inlineCode",{parentName:"p"},"11000")," range. You ",Object(r.b)("strong",{parentName:"p"},"MUST")," select a different range to Mission Control, and other modders, when selecting a range of IDs to create."),Object(r.b)("h2",{id:"create-an-encounter-layer"},"Create an encounter layer"),Object(r.b)("p",null,"Either use Mission Control's system, or create your own to add an encounter layer entry into the MDD. ",Object(r.b)("strong",{parentName:"p"},"This is not covered by ModTek or HBS's ModLoader"),"."),Object(r.b)("p",null,"If using Mission Control's system:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create a folder with your contract type name under ",Object(r.b)("inlineCode",{parentName:"li"},"MissionControl/overrides/encounterLayers"),". For example, if your contract type is called ",Object(r.b)("inlineCode",{parentName:"li"},"Invasion")," then call it ",Object(r.b)("inlineCode",{parentName:"li"},"invasion"),"."),Object(r.b)("li",{parentName:"ul"},"For the map you wish your contract type to be playable on, you must create a json file here."),Object(r.b)("li",{parentName:"ul"},"Name the file ",Object(r.b)("inlineCode",{parentName:"li"},"encounterLayer_{contractTypeName}.{mapName}.json"),", for example ",Object(r.b)("inlineCode",{parentName:"li"},"encounterLayer_soloDuel.mapStory_StoryEncounter3_mMoon_craters"))),Object(r.b)("p",null,"Inside the file add the following, but changing what you require:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "EncounterLayerID": "mapArena_deathValley_aDes.73b9ebfe-b62b-4ffb-87b9-a0191d2530b3", // Unique ID as {mapName}.{UUIDv4}\n  "MapID": "mapArena_deathValley_aDes", // Map ID as referenced in the `Maps` table in the MDD\n  "Name": "encMC_SoloDuel_OpenArea", // Custom name unique to your encounter. encGeneral is used for vanilla. encMC for MC.\n  "FriendlyName": "Solo Duel - Open Area", // Displayed only in BT\'s debug contract selector\n  "Description": "Player must kill the duel target.", // Only used here\n  "BattleValue": "0", // Always \'0\', even for vanilla\n  "ContractTypeID": "10000", // Cross referenced ID with your above contract type enum\n  "EncounterLayerGUID": "73b9ebfe-b62b-4ffb-87b9-a0191d2530b3", // Unique UUIDv4. Must be the same as the other UUIDs in this file\n  "TagSetID": "mapArena_deathValley_aDes.73b9ebfe-b62b-4ffb-87b9-a0191d2530b3", // Same ID as \'EncounterLayerID\' above\n  "IncludeInBuild": "1" // Must be \'1\' otherwise the contract type won\'t be available to use\n}\n')),Object(r.b)("h2",{id:"create-a-contract-type-build"},"Create a contract type build"),Object(r.b)("p",null,"The contract type build file creates the actual encounter in the select map. Mission Control loads a map and dynamically builds the entire contract type up from nothing."),Object(r.b)("p",null,"I highly recommend before creating a contract type build file you look through the Mission Control ",Object(r.b)("inlineCode",{parentName:"p"},"SoloDuel")," contract type as an very simple example."),Object(r.b)("p",null,"A contract type build for a contract type consists of two elements:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A ",Object(r.b)("inlineCode",{parentName:"li"},"common.jsonc")," file which outlays all the general elements and logic for the contract type"),Object(r.b)("li",{parentName:"ul"},"For every map the contract type is set up to run on a ",Object(r.b)("inlineCode",{parentName:"li"},".jsonc")," for map specific settings (most often positions and rotations), for example ",Object(r.b)("inlineCode",{parentName:"li"},"deathvalley_desert_open_area.jsonc")," (the name can be anything you want but it's a good idea to include the map name, biome and any other specifier)")),Object(r.b)("p",null,"An important aspect of the ",Object(r.b)("inlineCode",{parentName:"p"},"common.jsonc")," is that it has a ",Object(r.b)("inlineCode",{parentName:"p"},"Key")," property which is the contract type ",Object(r.b)("inlineCode",{parentName:"p"},"Name")," from the above contract type enum created."),Object(r.b)("p",null,"An important aspect of the map specific files is that it contains an ",Object(r.b)("inlineCode",{parentName:"p"},"EncounterLayerId")," which is the ",Object(r.b)("inlineCode",{parentName:"p"},"EncounterLayerId")," from the above created encounter layer. The format of overrides is the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.newtonsoft.com/json/help/html/QueryJsonSelectTokenJsonPath.htm"}),"Json.NET query/select system"),"."),Object(r.b)("p",null,"Tutorials and guides will be made soon to cover this in more detail."),Object(r.b)("h2",{id:"optional-add-an-encounter-ruleset-for-your-contract-type"},"(Optional) Add an Encounter Ruleset for your contract type"),Object(r.b)("p",null,"This step is optional. If you're not using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../features/random-spawns"}),"random spawns")," or ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../features/additional-lances"}),"additional lances")," then you won't need to create this."),Object(r.b)("p",null,"As described in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/features/encounter-rulesets"}),"encounter rulesets")," section, you can submit an ",Object(r.b)("inlineCode",{parentName:"p"},"EncounterRuleset")," to Mission Control to better control the features of Mission Control with your contract type."),Object(r.b)("p",null,"These features can be things like:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Specifying where you want the Additional Lances to spawn around"),Object(r.b)("li",{parentName:"ul"},"Specifying how any of the lance spawners in the contract type will randomise their spawn, for example",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Using a ",Object(r.b)("inlineCode",{parentName:"li"},"SpawnLanceAtEdgeBoundary")," to spawn the player lance on the boundary of the map"),Object(r.b)("li",{parentName:"ul"},"Using a ",Object(r.b)("inlineCode",{parentName:"li"},"SpawnLanceAnywhere")," to ensure an enemy reinforcement lance is spawned randomly anywhere, but at least within 10 hexs of the player lance"),Object(r.b)("li",{parentName:"ul"},"Using a ",Object(r.b)("inlineCode",{parentName:"li"},"LookAtTarget")," to ensure a lance is looking at a target"))),Object(r.b)("li",{parentName:"ul"},"Any other custom logic you wish to run using any custom rules you want")),Object(r.b)("p",null,"To implement this, follow the guide in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/features/encounter-rulesets"}),"encounter rulesets")," section."))}s.isMDXComponent=!0},188:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a),o=r.a.createContext({}),c=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=c(e.components);return r.a.createElement(o.Provider,{value:t},e.children)};var l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,b=u[i+"."+p]||u[p]||l[p]||o;return n?r.a.createElement(b,Object.assign({},{ref:t},s,{components:n})):r.a.createElement(b,Object.assign({},{ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=n[u];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);